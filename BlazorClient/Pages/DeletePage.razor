@page "/DeletePage/{studentId}"
@inject HttpClient httpClient
@inject NavigationManager NavManager

<h2> Delete Page</h2>


<EditForm Model="@student" OnValidSubmit="@HandleDelete">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <InputText placeholder="First Name" id="firstName" @bind-Value="@student.FirstName" />
    <br />
    <InputText placeholder="Last Name" id="lastName" @bind-Value="@student.LastName" />
    <br />
    <InputText placeholder="School" id="school" @bind-Value="@student.School" />
    <br />
    <button type="submit" value="Delete" class="btn btn-danger">Submit</button>

</EditForm>




@code{


    [Parameter]

    public String StudentId { get; set; }
    private Student student = new Student();

    Student s;

   // Student[] students;
    string baseUrl = "http://localhost:9709/";//URL OF OUR API SERVICE


    protected async Task ShowDelete(string id)
    {
        s = await httpClient.GetFromJsonAsync<Student>($"{baseUrl}api/students/{id}");
        student.StudentId = s.StudentId;
        student.FirstName = s.FirstName;
        student.LastName = s.LastName;
        student.School = s.School;

    }


    @code { protected async void HandleDelete()
        {
            string endpoint = $"{baseUrl}api/students/{student.StudentId}";
            await httpClient.DeleteAsync(endpoint);
            await httpClient.PutAsJsonAsync(endpoint, student);
            returnToStudentpage();

        } }

    private void returnToStudentpage()
    {
        NavManager.NavigateTo("/");
    }


    protected override async Task OnInitializedAsync()
    {
        await ShowDelete(StudentId);
    }
}

<p><button @onclick="@returnToStudentpage">Back to home page</button></p>


