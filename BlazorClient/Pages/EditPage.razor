@page "/EditPage/{studentId}"
@inject HttpClient httpClient
@inject NavigationManager NavManager

<h2> Edit Page</h2>


<EditForm Model="@student" OnValidSubmit="@HandleUpdate">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <InputText placeholder="First Name" id="firstName" @bind-Value="@student.FirstName" />
    <br />
    <InputText placeholder="Last Name" id="lastName" @bind-Value="@student.LastName" />
    <br />
    <InputText placeholder="School" id="school" @bind-Value="@student.School" />
    <br />
    <button type="submit" class="btn btn-success">Submit</button>

</EditForm>


@code{

    [Parameter]
    public string StudentId { get; set; }
    private Student student = new Student();

    Student s;

    string baseUrl = "http://localhost:9709/";//URL OF OUR API SERVICE


    protected async Task ShowEdit(string id)
    {
        s = await httpClient.GetFromJsonAsync<Student>($"{baseUrl}api/students/{id}");
        student.StudentId = s.StudentId;
        student.FirstName = s.FirstName;
        student.LastName = s.LastName;
        student.School = s.School;
        Console.WriteLine(s);

    }

     private async void HandleUpdate()
        {
            string endpoint = $"{baseUrl}api/students/{student.StudentId}";

            await httpClient.PutAsJsonAsync(endpoint, student);
            returnToStudentpage();

        }

    private void returnToStudentpage()
    {
        NavManager.NavigateTo("/");
    }


    protected override async Task OnInitializedAsync()
    {
        await ShowEdit(StudentId);
    }
}

<p><button @onclick="@returnToStudentpage">Go back to home</button></p>


